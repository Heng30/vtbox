import { ListView } from "std-widgets.slint";
import { Theme } from "../theme.slint";
import { Store } from "../store.slint";
import { Logic } from "../logic.slint";
import { IconBtn } from "../base/icon-btn.slint";
import { NoMessageImg } from "../base/no-message.slint";
import { CenterLayout } from "../base/center-layout.slint";
import { Label } from "../base/label.slint";
import { CDialog } from "../base/cdialog.slint";

export component AddressBookDialog inherits CDialog {
    visible: Store.is-show-address-book-dialog;
    title: Store.translator.address-book-dialog-title;
    is-hide-btns: true;
    height: 350px;

    cancel-clicked => {
        Store.is-show-address-book-dialog = false;
    }

    Rectangle {
        height: root.height;

        NoMessageImg {
            visible: Store.address-book-datas.length <= 0;
            width: Theme.default-width * 0.618;
            text: Store.translator.no-message;
        }

        VerticalLayout {
            Rectangle {
                height: Theme.header-height;
                background: Theme.lighter-border-color;

                HorizontalLayout {
                    spacing: Theme.spacing * 2;
                    padding-left: Theme.padding;
                    padding-right: Theme.padding;

                    Label {
                        width: root.width * 25%;
                        text: Store.translator.address-book-header-name;
                    }

                    Label {
                        text: Store.translator.address-book-header-address;
                    }
                }
            }

            ListView {
                for data[index] in Store.address-book-datas : address-item := Rectangle {
                    background: address-item-touch.has-hover ? Theme.hover-color : Colors.transparent;

                    HorizontalLayout {
                        spacing: Theme.spacing * 2;
                        padding: Theme.padding;

                        Label {
                            width: root.width * 25%;
                            text: data.name;
                            overflow: elide;
                        }

                        Label {
                            text: data.address;
                            overflow: elide;
                        }

                    }

                    address-item-touch := TouchArea {
                        clicked => {
                            Logic.set-receive-address(data.address);
                            Store.is-show-address-book-dialog = false;
                        }
                    }
                }
            }
        }
    }
}
