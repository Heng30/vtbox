import { Theme } from "./theme.slint";

export global Util {
    callback string-fixed2(string) -> string;
    callback float-fixed2(float) -> string;
    callback open-url(string);

    out property<image> no-image: @image-url("./images/no-image.svg");

    pure callback local-now(string) -> string;
    local-now => { return "12:34:45"; }

    pure callback format_number_with_commas(string) -> string;
    format_number-with-commas(number-str) => { return number-str; }

    pure callback generate-qrcode(string) -> image;
    generate-qrcode(msg) => { return no-image; }

    pure callback split-and-join-string(string, int, string) -> string;
    split-and-join-string(input, length, sep) => { return input; }

    pure callback filename(string) -> string;
    filename(path) => { return path; }

    public pure function text-color(type: string) -> color {
       if (type == "success") {
           return Theme.success-color;
       } else if (type == "warning") {
           return Theme.warning-color;
       } else if (type == "danger") {
            return Theme.danger-color;
       }
       return Theme.info-color;
    }

    public pure function icon-source(type: string) -> image {
       if (type == "success") {
           return @image-url("./images/success.svg");
       } else if (type == "warning") {
           return @image-url("./images/warning.svg");
       } else if (type == "danger") {
           return @image-url("./images/danger.svg");
       }
       return @image-url("./images/info.svg");
    }

    public pure function blockstream-address-url(network: string, address: string) -> string {
        if (network == "main") {
            return "https://blockstream.info/address/" + address;
        } else {
            return "https://blockstream.info/testnet/address/" + address;
        }
    }
}
